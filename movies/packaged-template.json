AWSTemplateFormatVersion: '2010-09-09'
Transform:
- AWS::Serverless-2016-10-31
Description: Lambda CloudFormation Lab
Resources:
  GetInfoMovie:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getInfoMovie
      Handler: movie.getInfoMovie
      Runtime: python3.6
      CodeUri: s3://my-tefy-123/e8e7216498c31779d143dbffa407dbee
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE:
            Ref: MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /movies/{movie_id}
            Method: GET
  PutMovie:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putMovie
      Handler: movie.putMovie
      Runtime: python3.6
      CodeUri: s3://my-tefy-123/e8e7216498c31779d143dbffa407dbee
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE:
            Ref: MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /movies/{movie_id}
            Method: PUT
  RoomsPerDay:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: roomsPerDay
      Handler: movie.roomsPerDay
      Runtime: python3.6
      CodeUri: s3://my-tefy-123/e8e7216498c31779d143dbffa407dbee
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE:
            Ref: MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /roomsPerDay/movie/{movie_id}
            Method: GET
  PeopleAttend:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: peopleAttend
      Handler: movie.peopleAttend
      Runtime: python3.6
      CodeUri: s3://my-tefy-123/e8e7216498c31779d143dbffa407dbee
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE:
            Ref: MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /peopleAttend/movie/{movie_id}/cinema-rooms/{room_id}
            Method: GET
  SeatsAvailable:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: seatsAvailable
      Handler: cinema-rooms.seatsAvailable
      Runtime: python3.6
      CodeUri: s3://my-tefy-123/e8e7216498c31779d143dbffa407dbee
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE:
            Ref: MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /seatsAvailable/cinema/{cinema_id}
            Method: GET
  CustomerWatched:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: customerWatched
      Handler: customers.customerWatched
      Runtime: python3.6
      CodeUri: s3://my-tefy-123/e8e7216498c31779d143dbffa407dbee
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE:
            Ref: MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /customerWatched/customers/{customer_id}
            Method: GET
  putCinema:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putCinema
      Handler: cinema-rooms.putCinema
      Runtime: python3.6
      CodeUri: s3://my-tefy-123/e8e7216498c31779d143dbffa407dbee
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MoviesTable
      - DynamoDBWritePolicy:
          TableName:
            Ref: MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE:
            Ref: MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /updateCinema/cinema/{cinema_id}
            Method: PUT
  MyAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: movies-api
      StageName: prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: s3://my-tefy-123/65d7e637aa1736fc340d5d5fbeb00f8d
  MoviesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: movies-table
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      KeySchema:
      - AttributeName: pk
        KeyType: HASH
      - AttributeName: sk
        KeyType: RANGE
      AttributeDefinitions:
      - AttributeName: pk
        AttributeType: S
      - AttributeName: sk
        AttributeType: S
